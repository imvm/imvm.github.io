{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/layout.js","webpack:///./src/components/navbar.js","webpack:///./src/pages/index.js"],"names":["Bio","useStaticQuery","site","siteMetadata","author","social","style","display","flexDirection","marginBottom","rhythm","justifyContent","alignItems","href","twitter","Layout","render","header","this","props","location","title","children","pathname","scale","marginTop","textAlign","boxShadow","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","React","Component","NavBar","fontSize","activeStyle","fontWeight","BlogIndex","data","siteTitle","posts","allMarkdownRemark","edges","slice","map","node","frontmatter","fields","slug","key","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"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","file":"component---src-pages-index-js-c4865a9789d0ca3771cf.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        flexDirection: `column`,\n        marginBottom: rhythm(2.5),\n        justifyContent: `center`,\n        alignItems: `center`,\n      }}\n    >\n      <p>\n        Written by <strong>{author}</strong>.\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>\n          Follow me on twitter if you'd like\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n            justifyContent: `center`,\n            alignItems: `center`,\n            textAlign: `center`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            ...scale(1.5),\n            fontFamily: `Montserrat, sans-serif`,\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n            justifyContent: `center`,\n            alignItems: `center`,\n            textAlign: `center`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst NavBar = () => {\n  return (\n    <div style={{\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`,\n        fontFamily: `Montserrat, sans-serif`,\n      }}>\n        <Link to=\"/\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Home</Link>\n        <Link to=\"/portfolio\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Portfolio</Link>\n        <Link to=\"/archive\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Archive</Link>\n        <Link to=\"/talks\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Talks</Link>\n        <Link to=\"/reading\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Reading List</Link>\n        <Link to=\"/about\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>About</Link>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport NavBar from \"../components/navbar\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <NavBar />\n        <h3\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          Recent Posts\n        </h3>\n        {posts.slice(0, 3).map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n        <Bio />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { published: { eq: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}