{"version":3,"sources":["webpack:///./src/components/navbar.js","webpack:///./src/components/Layout.js","webpack:///./src/templates/archive-list.js"],"names":["NavBar","style","display","justifyContent","alignItems","fontFamily","to","marginLeft","marginRight","fontSize","boxShadow","activeStyle","fontWeight","Layout","render","header","this","props","location","title","children","pathname","scale","marginBottom","rhythm","marginTop","textAlign","textDecoration","color","maxWidth","padding","Date","getFullYear","href","React","Component","ArchiveIndex","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","nextPage","keywords","map","node","frontmatter","fields","slug","key","date","dangerouslySetInnerHTML","__html","excerpt","flexWrap","listStyle","rel","Array","from","length","_","i","margin","background"],"mappings":"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","file":"component---src-templates-archive-list-js-f413e2090c5629da8573.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst NavBar = () => {\n  return (\n    <div style={{\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`,\n        fontFamily: `Montserrat, sans-serif`,\n      }}>\n        <Link to=\"/\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Home</Link>\n        <Link to=\"/portfolio\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Portfolio</Link>\n        <Link to=\"/archive\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Archive</Link>\n        <Link to=\"/talks\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Talks</Link>\n        <Link to=\"/reading\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Reading List</Link>\n        <Link to=\"/about\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>About</Link>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n            justifyContent: `center`,\n            alignItems: `center`,\n            textAlign: `center`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            ...scale(1.5),\n            fontFamily: `Montserrat, sans-serif`,\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n            justifyContent: `center`,\n            alignItems: `center`,\n            textAlign: `center`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport NavBar from \"../components/navbar\";\nimport { rhythm } from '../utils/typography'\n\nclass ArchiveIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/archive' : `/archive${currentPage - 1}`\n    const nextPage = `/archive${currentPage + 1}`\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `iOS`, `swift`, `AWS`, `Elm`]}\n        />\n        <NavBar />\n        <h3\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          All posts\n        </h3>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          {!isFirst && (\n            <Link to={prevPage} rel=\"prev\">\n              ← Previous Page\n            </Link>\n          )}\n          {Array.from({ length: numPages }, (_, i) => (\n            <li\n              key={`pagination-number${i + 1}`}\n              style={{\n                margin: 0,\n              }}\n            >\n              <Link\n                to={`/archive${i === 0 ? '' : i + 1}`}\n                style={{\n                  padding: rhythm(1 / 4),\n                  textDecoration: 'none',\n                  color: i + 1 === currentPage ? '#ffffff' : '',\n                  background: i + 1 === currentPage ? '#007acc' : '',\n                }}\n              >\n                {i + 1}\n              </Link>\n            </li>\n          ))}\n          {!isLast && (\n            <Link to={nextPage} rel=\"next\">\n              Next Page →\n            </Link>\n          )}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default ArchiveIndex\n\nexport const pageQuery = graphql`\n  query archivePageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { published: { eq: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}