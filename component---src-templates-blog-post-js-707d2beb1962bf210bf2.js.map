{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/layout.js","webpack:///./src/components/navbar.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","useStaticQuery","site","siteMetadata","author","social","style","display","flexDirection","marginBottom","rhythm","justifyContent","alignItems","href","twitter","Layout","render","header","this","props","location","title","children","pathname","scale","marginTop","textAlign","boxShadow","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","React","Component","NavBar","fontSize","activeStyle","fontWeight","BlogPostTemplate","post","data","markdownRemark","siteTitle","pageContext","previous","next","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","flexWrap","listStyle","fields","slug","rel"],"mappings":"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","file":"component---src-templates-blog-post-js-707d2beb1962bf210bf2.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        flexDirection: `column`,\n        marginBottom: rhythm(2.5),\n        justifyContent: `center`,\n        alignItems: `center`,\n      }}\n    >\n      <p>\n        Written by <strong>{author}</strong>.\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>\n          Follow me on twitter if you'd like\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n            justifyContent: `center`,\n            alignItems: `center`,\n            textAlign: `center`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            ...scale(1.5),\n            fontFamily: `Montserrat, sans-serif`,\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n            justifyContent: `center`,\n            alignItems: `center`,\n            textAlign: `center`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst NavBar = () => {\n  return (\n    <div style={{\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`,\n        fontFamily: `Montserrat, sans-serif`,\n      }}>\n        <Link to=\"/\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Home</Link>\n        <Link to=\"/portfolio\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Portfolio</Link>\n        <Link to=\"/archive\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Archive</Link>\n        <Link to=\"/talks\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Talks</Link>\n        <Link to=\"/reading\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Reading List</Link>\n        <Link to=\"/about\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>About</Link>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport NavBar from \"../components/navbar\";\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <NavBar />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}