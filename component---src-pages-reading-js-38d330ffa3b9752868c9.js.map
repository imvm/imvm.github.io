{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/navbar.js","webpack:///./src/pages/reading.js"],"names":["Layout","render","header","this","props","location","title","children","pathname","style","scale","marginBottom","rhythm","marginTop","justifyContent","alignItems","textAlign","boxShadow","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","React","Component","NavBar","display","fontSize","activeStyle","fontWeight","ReadingPage","siteTitle","data","site","siteMetadata","JSONData","sort","a","b","score","slice","map","authors","join","filter","reading_status","recently_read"],"mappings":"wJAKMA,E,kGACJC,OAAA,WAAU,IAGJC,EAHG,EAC+BC,KAAKC,MAAnCC,EADD,EACCA,SAAUC,EADX,EACWA,MAAOC,EADlB,EACkBA,SAsDzB,OAjDEL,EAJY,MAGVG,EAASG,SAET,wBACEC,MAAK,iBACAC,YAAM,KADN,CAEHC,aAAcC,YAAO,IACrBC,UAAW,EACXC,eAAe,SACfC,WAAW,SACXC,UAAU,YAGZ,kBAAC,OAAD,CACEP,MAAO,CACLQ,UAAU,OACVC,eAAe,OACfC,MAAM,WAERC,GAAE,KAEDd,IAML,wBACEG,MAAK,iBACAC,YAAM,KADN,CAEHW,WAAW,yBACXV,aAAcC,YAAO,IACrBC,UAAW,EACXC,eAAe,SACfC,WAAW,SACXC,UAAU,YAGZ,kBAAC,OAAD,CACEP,MAAO,CACLQ,UAAU,OACVC,eAAe,OACfC,MAAM,WAERC,GAAE,KAEDd,IAMP,yBACEG,MAAO,CACLa,WAAW,OACXC,YAAY,OACZC,SAAUZ,YAAO,IACjBa,QAAYb,YAAO,KAAZ,IAAoBA,YAAO,EAAI,KAGxC,gCAASV,GACT,8BAAOK,GACP,sCACK,IAAImB,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,a,GAtEWC,IAAMC,WA6EZ9B,O,kCClFf,qCA6Be+B,IAlBA,WACb,OACE,yBAAKtB,MAAO,CACRuB,QAAQ,OACRlB,eAAe,SACfC,WAAW,SACXM,WAAW,2BAEX,kBAAC,OAAD,CAAMD,GAAG,IAAIX,MAAO,CAACa,WAAY,GAAIC,YAAa,GAAIU,SAAU,GAAIhB,UAAW,QAASiB,YAAa,CAAEC,WAAY,SAAnH,QACA,kBAAC,OAAD,CAAMf,GAAG,aAAaX,MAAO,CAACa,WAAY,GAAIC,YAAa,GAAIU,SAAU,GAAIhB,UAAW,QAASiB,YAAa,CAAEC,WAAY,SAA5H,aACA,kBAAC,OAAD,CAAMf,GAAG,WAAWX,MAAO,CAACa,WAAY,GAAIC,YAAa,GAAIU,SAAU,GAAIhB,UAAW,QAASiB,YAAa,CAAEC,WAAY,SAA1H,WACA,kBAAC,OAAD,CAAMf,GAAG,SAASX,MAAO,CAACa,WAAY,GAAIC,YAAa,GAAIU,SAAU,GAAIhB,UAAW,QAASiB,YAAa,CAAEC,WAAY,SAAxH,SACA,kBAAC,OAAD,CAAMf,GAAG,WAAWX,MAAO,CAACa,WAAY,GAAIC,YAAa,GAAIU,SAAU,GAAIhB,UAAW,QAASiB,YAAa,CAAEC,WAAY,SAA1H,gBACA,kBAAC,OAAD,CAAMf,GAAG,SAASX,MAAO,CAACa,WAAY,GAAIC,YAAa,GAAIU,SAAU,GAAIhB,UAAW,QAASiB,YAAa,CAAEC,WAAY,SAAxH,Y,2xDChBFC,E,kGACJnC,OAAA,WAAU,IAEFoC,EADWlC,KAAKC,MAAdkC,KACeC,KAAKC,aAAalC,MAEzC,OACE,kBAAC,IAAD,CAAQD,SAAUF,KAAKC,MAAMC,SAAUC,MAAO+B,GAC5C,kBAAC,IAAD,CAAK/B,MAAM,iBACX,kBAAC,IAAD,MACA,4CACA,kNAGA,qCACA,4BACGmC,EAASC,MAAK,SAASC,EAAGC,GACzB,OAAOA,EAAEC,MAAQF,EAAEE,SAClBC,MAAM,EAAG,GAAGC,KAAI,SAACT,GAClB,OAAO,4BAAKA,EAAKhC,MAAV,OAAqBgC,EAAKU,QAAQC,KAAK,WAGlD,iDACA,4BACGR,EAASS,QAAO,SAACZ,GAChB,MAA+B,YAAxBA,EAAKa,kBACXJ,KAAI,SAACT,GACN,OAAO,4BAAKA,EAAKhC,MAAV,OAAqBgC,EAAKU,QAAQC,KAAK,WAGlD,6CACA,4BACGR,EAASS,QAAO,SAACZ,GAChB,MAA+B,WAAxBA,EAAKa,kBACXJ,KAAI,SAACT,GACN,OAAO,4BAAKA,EAAKhC,MAAV,OAAqBgC,EAAKU,QAAQC,KAAK,WAGlD,6CACA,4BACGR,EAASS,QAAO,SAACZ,GAChB,MAA+B,aAAxBA,EAAKa,iBACe,IAAvBb,EAAKc,iBACRL,KAAI,SAACT,GACN,OAAO,4BAAKA,EAAKhC,MAAV,OAAqBgC,EAAKU,QAAQC,KAAK,a,GA3ChCpB,IAAMC,WAmDjBM","file":"component---src-pages-reading-js-38d330ffa3b9752868c9.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n            justifyContent: `center`,\n            alignItems: `center`,\n            textAlign: `center`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            ...scale(1.5),\n            fontFamily: `Montserrat, sans-serif`,\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n            justifyContent: `center`,\n            alignItems: `center`,\n            textAlign: `center`,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst NavBar = () => {\n  return (\n    <div style={{\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`,\n        fontFamily: `Montserrat, sans-serif`,\n      }}>\n        <Link to=\"/\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Home</Link>\n        <Link to=\"/portfolio\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Portfolio</Link>\n        <Link to=\"/archive\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Archive</Link>\n        <Link to=\"/talks\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Talks</Link>\n        <Link to=\"/reading\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>Reading List</Link>\n        <Link to=\"/about\" style={{marginLeft: 25, marginRight: 25, fontSize: 18, boxShadow: 'none'}} activeStyle={{ fontWeight: \"bold\" }}>About</Link>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport JSONData from \"../../content/books.json\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport NavBar from \"../components/navbar\";\n\nclass ReadingPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Reading List\" />\n        <NavBar />\n        <h1>Reading List</h1>\n        <p>Reading is one of my favorite hobbies, but sometimes I don't make \n            enough time for it. As an incentive to read more, I plan on keeping \n            this list as a record of my reading activity.</p>\n        <h3>Top 3</h3>\n        <ul>\n          {JSONData.sort(function(a, b) {\n            return b.score - a.score;\n          }).slice(0, 3).map((data) => {\n            return <li>{data.title} by {data.authors.join(\", \")}</li>\n          })}\n        </ul>\n        <h3>Currently reading</h3>\n        <ul>\n          {JSONData.filter((data) => {\n            return data.reading_status === \"reading\";\n          }).map((data) => {\n            return <li>{data.title} by {data.authors.join(\", \")}</li>\n          })}\n        </ul>\n        <h3>On my backlog</h3>\n        <ul>\n          {JSONData.filter((data) => {\n            return data.reading_status === \"unread\";\n          }).map((data) => {\n            return <li>{data.title} by {data.authors.join(\", \")}</li>\n          })}\n        </ul>\n        <h3>Recently read</h3>\n        <ul>\n          {JSONData.filter((data) => {\n            return data.reading_status === \"finished\"\n             && data.recently_read === true;\n          }).map((data) => {\n            return <li>{data.title} by {data.authors.join(\", \")}</li>\n          })}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default ReadingPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}